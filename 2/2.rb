#!/usr/bin/ruby

=begin
Adam Lathers
alathers@gmail.com

Even Fibonacci numbers
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

Solved (ruby first)
Answer:
    4613732

=end
# Assume this is more to exercise Ruby, and less to search for the appropriate rubygem that already solved my problem
### ...I always hated the towers of hanoi problems.


fibCurr=fibPrev=1
fibSum=0
boundVal=4000000

# use a while loop, just to break from my normal for each x in range, style
while fibCurr < boundVal do 
    fibSum+= fibCurr if fibCurr.even?
    fibNext= fibCurr + fibPrev
    fibPrev = fibCurr
    fibCurr = fibNext
end

puts fibSum

=begin
Original solution:     

cur=1
nex=2
tmp=3
fib=0
sum=0

while cur < 3999999
    if cur%2 == 0 
        sum=sum+cur
    end
    puts cur
    cur=nex
    nex=tmp
    tmp=cur+nex
end
puts
puts sum

=end